name: MacOS CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: macOS-10.14
    strategy:
      matrix:
        include:
          - python-version: '2.7'
            onnx_ml: 0
          - python-version: '3.6'
            onnx_ml: 0
          - python-version: '3.6'
            onnx_ml: 1

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Create Anaconda environment
      uses: goanpeca/setup-miniconda@v1
      with: 
        activate-environment: py${{ matrix.python-version }}
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
    - run: conda install protobuf pybind11
      shell: bash -l {0}
    - run: |
        python -m pip install --upgrade setuptools
        python -m pip install numpy
        brew update
        brew install protobuf
        export ONNX_ML=${{ matrix.onnx_ml }}
        export CMAKE_ARGS="-DONNX_USE_LITE_PROTO=ON -DONNXIFI_DUMMY_BACKEND=ON"
        export ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI
        python setup.py --quiet install
      name: 'Install dependencies and ONNX'
      shell: bash -l {0}

    - run: |
        # lint python code
        pip install --quiet flake8
        flake8
        if [ $? -ne 0 ]; then
          echo "flake8 returned failures"
          exit 1
        fi

        # Do not hardcode onnx's namespace in the c++ source code, so that
        # other libraries who statically link with onnx can hide onnx symbols
        # in a private namespace.
        ! grep -R --include='*.cc' --include='*.h' 'namespace onnx' .
        ! grep -R --include='*.cc' --include='*.h' 'onnx::' .

        # onnx python api tests
        if [ "${{ matrix.python-version }}" == "2.7" ]; then
          pip install --quiet pytest nbval
        else
          # pytest 6.0 made deprecation warnings fail by default, pinning pytest to 5.4.3.
          # TODO replace deprecated function with the suggested one. https://docs.pytest.org/en/stable/deprecations.html#id5
          pip install --quiet pytest==5.4.3 nbval
        fi

        pytest onnxoptimizer
        if [ $? -ne 0 ]; then
          echo "pytest failed"
          exit 1
        fi
      shell: bash -l {0}
      name: 'Run ONNX Optimizer Tests'
